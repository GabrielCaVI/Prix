{"moduleFile":{"sourceFilePath":"/Users/gabrielcarrion/Documents/Components/Prix/src/components/app-menu/app-menu.tsx","jsFilePath":"/Users/gabrielcarrion/Documents/Components/Prix/src/components/app-menu/app-menu.js","cmps":[{"isLegacy":false,"tagName":"app-menu","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"appMenu","elementRef":null,"encapsulation":"none","properties":[{"name":"message","type":"string","attribute":"message","reflect":false,"mutable":false,"required":false,"optional":false,"complexType":{"original":"string","resolved":"string","references":{}},"docs":{"tags":[],"text":""},"internal":false},{"name":"color","type":"string","attribute":"color","reflect":false,"mutable":false,"required":false,"optional":false,"complexType":{"original":"string","resolved":"string","references":{}},"docs":{"tags":[],"text":""},"internal":false},{"name":"data","type":"any","attribute":"data","reflect":false,"mutable":false,"required":false,"optional":true,"defaultValue":"{}","complexType":{"original":"any","resolved":"any","references":{}},"docs":{"tags":[],"text":""},"internal":false},{"name":"dark","type":"boolean","attribute":"dark","reflect":false,"mutable":true,"required":false,"optional":false,"defaultValue":"false","complexType":{"original":"boolean","resolved":"boolean","references":{}},"docs":{"tags":[],"text":""},"internal":false}],"virtualProperties":[],"states":[{"name":"value"},{"name":"colour"},{"name":"internalItems"}],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[{"modeName":"$","styleStr":null,"styleId":"APP-MENU","compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/gabrielcarrion/Documents/Components/Prix/src/components/app-menu/app-menu.css","relativePath":"app-menu.css","originalComponentPath":"app-menu.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/gabrielcarrion/Documents/Components/Prix/src/components/app-menu/app-menu.js","sourceFilePath":"/Users/gabrielcarrion/Documents/Components/Prix/src/components/app-menu/app-menu.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":true,"hasComponentDidLoadFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":true,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":true,"hasProp":true,"hasPropNumber":false,"hasPropBoolean":true,"hasPropString":true,"hasPropMutable":true,"hasReflect":false,"hasRenderFn":true,"hasState":true,"hasStyle":true,"hasVdomAttribute":true,"hasVdomClass":true,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":true,"hasVdomRef":false,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":true,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["id","class","type","value","htmlFor","href"],"htmlTagNames":["div","button","span","p","input","label","ul","li","a"],"isUpdateable":true,"potentialCmpRefs":[]}],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":true,"hasVdomClass":true,"hasVdomFunctional":true,"hasVdomKey":true,"hasVdomListener":true,"hasVdomRef":true,"hasVdomRender":false,"hasVdomStyle":true,"hasVdomText":true,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"potentialCmpRefs":[]},"jsText":"import { h } from '@stencil/core';\r\nexport class appMenu {\r\n    constructor() {\r\n        this.data = {};\r\n        this.dark = false;\r\n        this.value = this.message;\r\n        this.colour = this.color;\r\n        this.internalItems = [];\r\n        this.handleToggle = () => {\r\n            let button = document.getElementById('openButton');\r\n            let inner = document.getElementById('inner-menu');\r\n            let content = document.getElementById('content');\r\n            button.classList.toggle('toggle');\r\n            button.classList.toggle('transition');\r\n            inner.classList.toggle('toggle');\r\n            inner.classList.toggle('showMenu');\r\n            inner.classList.toggle('transition');\r\n            content.classList.toggle('toggle');\r\n            content.classList.toggle('transition');\r\n            content.classList.toggle('hide');\r\n            setTimeout(function () {\r\n                button.classList.toggle(\"transition\");\r\n                inner.classList.toggle(\"transition\");\r\n            }, 350);\r\n        };\r\n    }\r\n    menuToggle() {\r\n        let item = document.getElementById('item');\r\n        item.classList.toggle('toggle');\r\n        item.classList.toggle('transition');\r\n        setTimeout(function () {\r\n            item.classList.toggle(\"transition\");\r\n        }, 350);\r\n    }\r\n    setValue(color) {\r\n        this.color = color;\r\n    }\r\n    init() {\r\n        this.internalItems = this.data.items;\r\n    }\r\n    componentWillLoad() {\r\n        this.init();\r\n    }\r\n    darkTheme() {\r\n        let inn = document.getElementById('inner-menu');\r\n        let but = document.getElementById('openButton');\r\n        inn.classList.toggle('dark');\r\n        but.classList.toggle('dark');\r\n    }\r\n    render() {\r\n        const items = this.internalItems;\r\n        return (h(\"div\", { id: \"menu\" },\r\n            h(\"div\", { id: \"bg-opacity\" }),\r\n            h(\"div\", { id: \"wrapper\", class: \"center\" },\r\n                h(\"button\", { id: \"openButton\", onClick: () => this.handleToggle(), class: \"float hide noselect dark\" },\r\n                    h(\"div\", { class: \"chevron\" })),\r\n                h(\"div\", { id: \"inner-menu\", class: \"dark\" },\r\n                    h(\"span\", null,\r\n                        \" \",\r\n                        h(\"button\", { id: \"dark\", onClick: () => this.handleToggle() }),\r\n                        \" \"),\r\n                    h(\"div\", { id: \"content\", class: \"hide center\" },\r\n                        h(\"p\", null, this.value),\r\n                        items.map((item) => (h(\"div\", { class: \"item\" },\r\n                            h(\"input\", { type: \"checkbox\", id: item.title, value: item.title }),\r\n                            h(\"label\", { htmlFor: item.title },\r\n                                item.title,\r\n                                \" \",\r\n                                h(\"span\", { class: \"fas fa-chevron-right arrow\" })),\r\n                            h(\"ul\", null,\r\n                                item.levels.map((level) => (h(\"div\", { class: \"item submenu\" },\r\n                                    h(\"input\", { type: \"checkbox\", id: level.title, value: level.title }),\r\n                                    h(\"label\", { htmlFor: level.title },\r\n                                        level.title,\r\n                                        \" \",\r\n                                        h(\"span\", { class: \"fas fa-chevron-right arrow\" })),\r\n                                    h(\"ul\", null, level.options.map((option) => (h(\"li\", null,\r\n                                        h(\"a\", { href: option.url },\r\n                                            h(\"span\", null, option.title))))))))),\r\n                                item.options.map((option) => (h(\"li\", null,\r\n                                    h(\"a\", { href: option.url },\r\n                                        h(\"span\", null, option.title))))))))),\r\n                        h(\"div\", { class: \"help22\", id: \"help\" },\r\n                            h(\"ul\", null,\r\n                                h(\"li\", null,\r\n                                    h(\"a\", { href: \"#\" },\r\n                                        h(\"span\", { class: \"far\" }),\r\n                                        \"Help Center\")))))))));\r\n    }\r\n    static get is() { return \"app-menu\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"app-menu.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"app-menu.css\"]\r\n    }; }\r\n    static get properties() { return {\r\n        \"message\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"message\",\r\n            \"reflect\": false\r\n        },\r\n        \"color\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"color\",\r\n            \"reflect\": false\r\n        },\r\n        \"data\": {\r\n            \"type\": \"any\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"any\",\r\n                \"resolved\": \"any\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"data\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"{}\"\r\n        },\r\n        \"dark\": {\r\n            \"type\": \"boolean\",\r\n            \"mutable\": true,\r\n            \"complexType\": {\r\n                \"original\": \"boolean\",\r\n                \"resolved\": \"boolean\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"dark\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"false\"\r\n        }\r\n    }; }\r\n    static get states() { return {\r\n        \"value\": {},\r\n        \"colour\": {},\r\n        \"internalItems\": {}\r\n    }; }\r\n}\r\n"}